---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minio-app
  name: minio-deployment
  namespace: minio
spec:
  selector:
    matchLabels:
      app: minio-app
  replicas: 1
  template:
    metadata:
      labels:
        app: minio-app
    spec:
      containers:
        - resources:
            limits:
              cpu: 250m
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 100Mi
          name: minio
          image: quay.io/minio/minio:latest
          command:
          - /bin/bash
          - -c
          args:
          - minio server /data  --config-dir=/config  --console-address :9090
          ports:
          - containerPort: 9000
            name: web
            protocol: TCP
          - containerPort: 9090
            protocol: TCP
            name: api
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - mountPath: /data
            name: data-volume
          - name: config
            mountPath: "/config"
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 30
          env:
          - name: MINIO_ACCESS_KEY
            value: 'minio_access_key'
          - name: MINIO_SECRET_KEY
            value: 'SnIz1xok36WfZcEUhPJao0GpsIXWnKdm4fA5WtfA'
          #- name: MINIO_ROOT_USER
          #  valueFrom:
          #    secretKeyRef:
          #      name: minio-credentials
          #      key: MINIO_ROOT_USER
          #- name: MINIO_ROOT_PASSWORD
          #  valueFrom:
          #    secretKeyRef:
          #      name: minio-credentials
          #      key: MINIO_ROOT_PASSWORD
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: minio-pvc
      - name: config
        emptyDir: {}

--- 
apiVersion: batch/v1
kind: Job 
metadata: 
  namespace: minio 
  name: minio-setup 
  labels: 
    component: minio 
spec: 
  template: 
    metadata: 
      name: minio-setup 
    spec: 
      restartPolicy: OnFailure 
      volumes: 
      - name: config 
        emptyDir: {} 
      containers: 
        - resources:
            limits:
              cpu: 100m
              memory: 256Gi
            requests:
              cpu: 20m
              memory: 100Mi
          name: mc 
          image: minio/mc:latest 
          imagePullPolicy: IfNotPresent 
          command: 
          - /bin/sh 
          - -c 
          - "mc --config-dir=/config config host add velero http://minio-web.minio.svc:9000  minio_access_key SnIz1xok36WfZcEUhPJao0GpsIXWnKdm4fA5WtfA  && mc --config-dir=/config mb -p velero/velero" 
          volumeMounts:
          - name: config
            mountPath: "/config"