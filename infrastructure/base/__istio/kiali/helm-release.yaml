---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: kiali-operator
    namespace: kiali
spec:
    releaseName: kiali-operator
    targetNamespace: kiali
    interval: 10m
    install:
        remediation:
            retries: 3
    upgrade:
        remediation:
            retries: 3
    test:
        enable: true
    driftDetection:
        mode: enabled
        ignore: []
    chartRef:
        kind: HelmChart
        name: kiali-operator
        namespace: kiali
    values:
        cr: # https://kiali.io/docs/configuration/kialis.kiali.io/
          create: true
          namespace: istio-system
          spec:
            auth:
              strategy: anonymous

            external_services:

              prometheus:
                enabled: true
                auth:
                  ca_file: ""
                  insecure_skip_verify: false
                  password: "pwd"
                  token: ""
                  type: "none"
                  use_kiali_token: false
                  username: ""

                # Prometheus service name is "metrics" and is in the "telemetry" namespace
                in_cluster_url: "http://kube-prometheus-stack-prometheus.monitoring:9090"

                # Fix the "Unreachable" metrics server warning.
                health_check_url: http://kube-prometheus-stack-prometheus.monitoring:9090/healthz"
                # Fix for the empty metrics dashboards
                thanos_proxy:
                    enabled: true
                    retention_period: "7d"
                    scrape_interval: "30s"

              grafana:

                auth:
                  ca_file: ""
                  insecure_skip_verify: false
                  password: ""
                  token: ""
                  type: "none"
                  use_kiali_token: false
                  username: ""
                # Grafana service name is "grafana" and is in the "monitoring" namespace.
                in_cluster_url: 'http://kube-prometheus-stack-grafana.monitoring:3000/'
                # Public facing URL of Grafana
                #external_url: 'https://grafana.dev.ftscode.de/'
                dashboards:
                - name: "Istio Service Dashboard"
                  variables:
                    namespace: "var-namespace"
                    service: "var-service"
                - name: "Istio Workload Dashboard"
                  variables:
                    namespace: "var-namespace"
                    workload: "var-workload"
                - name: "Istio Mesh Dashboard"
                - name: "Istio Control Plane Dashboard"
                - name: "Istio Performance Dashboard"
                - name: "Istio Wasm Extension Dashboard"


                enabled: false
                health_check_url: ""
                in_cluster_url: "http://kube-prometheus-stack-grafana.monitoring:3000"
                is_core: false
                url: ""


              tracing:
                # Enabled by default. Kiali will anyway fallback to disabled if
                # Jaeger is unreachable.
                enabled: true
                # Jaeger service name is "tracing" and is in the "telemetry" namespace.
                # Make sure the URL you provide corresponds to the non-GRPC enabled endpoint
                # if you set "use_grpc" to false.
                internal_url: "http://tracing.telemetry:16685/jaeger"
                use_grpc: true
                # Public facing URL of Jaeger
                external_url: "http://my-jaeger-host/jaeger"

                # default: custom_headers is empty
                custom_headers: {}

                grpc_port: 9095
                health_check_url: ""
                in_cluster_url:  "http://tracing.istio-system:16685/jaeger"
                is_core: false
                namespace_selector: true
                provider: "jaeger"
                # default: query_scope is empty
                query_scope: {}
                query_timeout: 5
                tempo_config:
                    datasource_uid: ""
                    org_id: ""
                url: "http://localhost:16686"
                whitelist_istio_system: [ "jaeger-query" ]

                auth:
                    ca_file: ""
                    insecure_skip_verify: false
                    password: ""
                    token: ""
                    type: "none"
                    use_kiali_token: false
                    username: ""

              istio:
                component_status:
                  enabled: false # true
                  components:
                    - app_label: "istiod"
                      is_core: true
                      is_proxy: false

                config_map_name: "istio"
                envoy_admin_local_port: 15000
                gateway_api_classes: [ ]
                istio_api_enabled: true
                # default: istio_canary_revision is undefined
                istio_canary_revision: {}
                istio_identity_domain: "svc.k8s-dev.lab"
                istio_injection_annotation: "sidecar.istio.io/inject"
                istio_sidecar_annotation: "sidecar.istio.io/status"
                istio_sidecar_injector_config_map_name: "istio-sidecar-injector"
                istiod_deployment_name: "istiod"
                istiod_pod_monitoring_port: 15014
                root_namespace: ""
                url_service_version: ""

                #external_services:
                #  custom_dashboards:
                #    discovery_auto_threshold: 10
                #    discovery_enabled: "auto"
                #    enabled: true
                #    is_core: false
                #    namespace_label: "namespace"
