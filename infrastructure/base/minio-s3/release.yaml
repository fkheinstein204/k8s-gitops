apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: minio
  namespace: minio-storage
  labels:
    name: minio
    app: minio
    fluxcd.io/namespace: minio-storage
    fluxcd.io/cluster: production
    fluxcd.io/managed-by: flux-system
    toolkit.fluxcd.io/tenant: sre-team
spec:
  chart:
    spec:
      chart: minio
      version: 5.4.x
      sourceRef:
        kind: HelmRepository
        name: minio
        namespace: minio-storage
  interval: 15m
  timeout: 5m
  releaseName: minio
  values:

    ## set kubernetes cluster domain where minio is running
    ##
    clusterDomain: k8s-prod.lab

    rootUser: rootuser
    rootPassword: rootpass123
    #existingSecret: minio-credentials
    #rootUserSecretKey: rootUser
    #rootPasswordSecretKey: rootPassword

    ## minio mode, i.e. standalone or distributed
    mode: distributed ## other supported values are "standalone"

    statefulset:
      updateStrategy:
        type: RollingUpdate
      podManagementPolicy: Parallel
      replicaCount: 3
      zones: 1
      drivesPerNode: 2

    ## Set default image, imageTag, and imagePullPolicy. mode is used to indicate the
    ##
    image:
      repository: quay.io/minio/minio
      tag: RELEASE.2025-01-20T14-49-07Z
      pullPolicy: IfNotPresent

    persistence:
      enabled: true
      size: 50Gi
      storageClassName: nfs-client
    resources:
      requests:
        cpu: 100m
        memory: 512Mi
      limits:
        cpu: 1
        memory: 2Gi

    provisioning:
      enabled: true
      buckets:
        - name: "loki"
        - name: "tempo"
        - name: "velero"

    metrics:
      serviceMonitor:
        enabled: true  # for prom-operator
        namespace: monitoring # namespace of prometheus

    service:
      name: minio
      type: ClusterIP
      port: 9000

    consoleService:
      name: minio-console
      type: ClusterIP
      port: 9001

    extraArgs:
      - --console-address :9001

    environment:
      MINIO_SERVER_URL: https://minio.homelab.ftscode.de
      MINIO_BROWSER_REDIRECT_URL:  https://minio-console.homelab.ftscode.de

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          certmanager.k8s.io/acme-http01-edit-in-place: "false"
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
      path: /
      hosts:
        - minio.homelab.ftscode.de
      tls:
        - secretName: minio-web-tls-prod
          hosts:
            - minio.homelab.ftscode.de

    consoleIngress:
      enabled: true
      ingressClassName: nginx
      annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          certmanager.k8s.io/acme-http01-edit-in-place: "false"
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
      path: /
      hosts:
        - minio-console.homelab.ftscode.de
      tls:
        - secretName: minio-console-tls-prod
          hosts:
            - minio-console.homelab.ftscode.de

      policies:
      - name: loki
        statements:
          - effect: Allow
            resources:
              - 'arn:aws:s3:::loki*/*'
            actions:
              - "s3:AbortMultipartUpload"
              - "s3:GetObject"
              - "s3:DeleteObject"
              - "s3:PutObject"
              - "s3:ListBucket"
              - "s3:ListMultipartUploadParts"
      - name: longhorn-policy
        statements:
        - resources:
          - 'arn:aws:s3:::longhorn'
          - 'arn:aws:s3:::longhorn/*'
          actions:
          - 's3:PutObject'
          - 's3:GetObject'
          - 's3:ListBucket'
          - 's3:DeleteObject'
      users:
      - accessKey: admin
        secretKey: admin123
        policy: consoleAdmin
      - accessKey: loki
        secretKey: lokiloki
        policy: loki
      - accessKey: longhorn
        secretKey: longhorn-accesskey
        policy: longhorn-policy

      buckets:
      - name: longhorn
        policy: none
        purge: false
        versioning: false
        objectlocking: false
      - name: loki
        policy: none
        purge: false
        versioning: false
        objectlocking: false